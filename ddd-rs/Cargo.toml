[package]
name = "ddd-rs"
version = "0.4.2"
edition = "2021"
authors = ["Gabriel Kim <gabrielkim13@gmail.com>"]
license = "MIT"
description = "Domain-Driven Design (DDD) building blocks, for Rust applications."
repository = "https://github.com/gabrielkim13/ddd-rs"
homepage = "https://github.com/gabrielkim13/ddd-rs"
categories = ["rust-patterns"]

[dependencies]
async-trait = "0.1"
chrono = "0.4"
axum = { version = "0.6", optional = true, default-features = false, features = ["json"] }
axum-core = { version = "0.3", optional = true }
ddd-rs-derive = { version = "=0.4.2", optional = true, path = "../ddd-rs-derive" }
futures = "0.3"
http = { version = "0.2", optional = true }
serde = { version = "1", optional = true, features = ["derive"] }
serde_json = { version = "1", optional = true }
thiserror = "1"
uuid = { version = "1", features = ["v4"] }

[dev-dependencies]
ddd-rs-derive = { version = "0.4", path = "../ddd-rs-derive" }
serde = { version = "1", features = ["derive"] }
tokio-test = "0.4"

[features]
default = ["derive"]

# Provides `axum` integration.
axum = ["dep:axum", "dep:axum-core", "dep:http", "dep:serde_json", "serde"]

# Provides `derive` macros.
derive = ["ddd-rs-derive"]

# Implements `serde::Serialize` and `serde::Deserialize` for the Presentation Layer types.
serde = ["dep:serde"]
